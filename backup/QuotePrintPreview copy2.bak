import React, { useEffect, useRef, useState } from 'react'
import { CurrencyFormat, DateFormat } from '../components/index'
import logoImage from '../assets/logo/logo.png'
import { useParams } from 'react-router-dom'
import { quotesAPI } from '../utils/apiClient'
import { renderStructuredText } from '../components/TextFormatting'

const QuotePrintPreview = () => {
  const iframeRef = useRef(null)
  const { id } = useParams()

  const [quoteData, setQuoteData] = useState(null)
  const [loading, setLoading] = useState(true)

  // Dynamic import print.css hanya untuk print preview
  useEffect(() => {
    // Import print.css secara dinamik
    import('../styles/print.css')

    // Cleanup function untuk remove CSS apabila component unmount
    return () => {
      // Remove print.css dari document head jika ada
      const existingLink = document.querySelector('link[href*="print.css"]')
      if (existingLink) {
        existingLink.remove()
      }
    }
  }, [])

  useEffect(() => {
    const fetchQuote = async () => {
      setLoading(true)
      if (!id) {
        setLoading(false)
        return
      }

      try {
        const res = await quotesAPI.getById(id)
        if (!res?.success || !res?.data) {
          setQuoteData(null)
          setLoading(false)
          return
        }

        const q = res.data
        setQuoteData({
          quoteNumber: q.quoteNumber || '',
          status: (q.status || '').toLowerCase(),
          date: q.date ? new Date(q.date).toISOString().slice(0, 10) : '',
          validUntil: q.validUntil ? new Date(q.validUntil).toISOString().slice(0, 10) : '',
          company: {
            name: q.company?.name || '',
            registration: q.company?.registration || '',
            address: q.company?.address || '',
            email: q.company?.email || '',
            phone: q.company?.phone || '',
            manager: q.company?.manager || ''
          },
          customer: {
            name: q.customer?.name || '',
            address: q.customer?.address || '',
            phone: q.customer?.phone || '',
            mobile: q.customer?.mobile || '',
            attn: q.customer?.attn || q.customer?.attention || ''
          },
          items: Array.isArray(q.items) && q.items.length > 0
            ? q.items.map((item, index) => ({
              id: item.id || index + 1,
              description: item.description || '',
              unitPrice: parseFloat(item.unitPrice ?? item.price ?? 0),
              quantity: parseFloat(item.quantity ?? 0),
              amount: parseFloat(
                item.amount ?? (
                  (parseFloat(item.quantity ?? 0) * parseFloat(item.unitPrice ?? item.price ?? 0))
                )
              )
            }))
            : [],
          subtotal: q.subtotal != null ? parseFloat(q.subtotal) : 0,
          tax: q.taxAmount != null ? parseFloat(q.taxAmount) : 0,
          total: q.total != null ? parseFloat(q.total) : 0,
          bank: {
            accountNumber: q.company?.bankacc || '',
            bankName: q.company?.bankname || '',
            accountHolder: q.company?.bankholder || ''
          },
          issuedBy: q.user?.name || '',
          notes: q.notes || ''
        })
      } catch (error) {
        setQuoteData(null)
      } finally {
        setLoading(false)
      }
    }

    fetchQuote()
  }, [id])

  const handlePrint = () => {
    if (iframeRef.current) {
      const iframe = iframeRef.current
      const iframeDoc = iframe.contentDocument || iframe.contentWindow.document

      const printContent = `
        <!DOCTYPE html>
        <html>
        <head>
          <link rel="stylesheet" href="/src/index.css">
          <link rel="stylesheet" href="/src/styles/print.css">
          <style>
            @page { margin: 0; padding: 0; }
            body { margin: 0; padding: 0; }
            .print-content { width: 100%; }
          </style>
        </head>
        <body>
          ${document.getElementById('print-content').innerHTML}
        </body>
        </html>
      `

      iframeDoc.open()
      iframeDoc.write(printContent)
      iframeDoc.close()

      iframe.onload = () => {
        iframe.contentWindow.focus()
        iframe.contentWindow.print()
      }
    }
  }

  const handleBack = () => {
    window.history.back()
  }

  if (loading) {
    return (
      <div className="max-w-7xl mx-auto p-6">
        <div className="bg-white rounded-lg shadow-lg overflow-hidden">
          <div className="bg-green-600 text-white px-6 py-4">
            <h1 className="text-xl font-semibold">Quote Print Preview</h1>
          </div>
          <div className="p-6 text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-green-600 mx-auto"></div>
            <p className="mt-4 text-gray-600">Loading quote data...</p>
          </div>
        </div>
      </div>
    )
  }

  if (!quoteData) {
    return (
      <div className="max-w-7xl mx-auto p-6">
        <div className="bg-white rounded-lg shadow-lg overflow-hidden">
          <div className="bg-green-600 text-white px-6 py-4">
            <h1 className="text-xl font-semibold">Quote Print Preview</h1>
          </div>
          <div className="p-6 text-center">
            <div className="text-red-500 text-6xl mb-4">⚠️</div>
            <h2 className="text-xl font-semibold text-gray-800 mb-2">Quote Not Found</h2>
            <p className="text-gray-600 mb-4">The requested quote could not be found or does not exist.</p>
            <button
              onClick={handleBack}
              className="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-md transition-colors duration-200"
            >
              Go Back
            </button>
          </div>
        </div>
      </div>
    )
  }

  const isActive = ['draft', 'sent', 'expired'].includes(quoteData?.status)

  return (
    <>
      {/* Hidden iframe for printing */}
      <iframe
        ref={iframeRef}
        style={{ display: 'none' }}
        title="Print Frame"
      />

      {/* Card Layout */}
      <div className="max-w-7xl mx-auto p-6">
        {/* Card */}
        <div className="bg-white rounded-lg shadow-lg overflow-hidden">
          {/* Card Header */}
          <div className="bg-green-600 text-white px-6 py-4 flex justify-between items-center">
            <h1 className="text-xl font-semibold">Quote Print Preview</h1>
            <div className="flex space-x-3">
              {isActive && (
                <button
                  onClick={() => window.location.href = `/quotes/${id}/edit`}
                  className="bg-yellow-500 hover:bg-yellow-600 text-white px-4 py-2 rounded-md transition-colors duration-200 flex items-center space-x-2"
                >
                  <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M11 5h2m-1 14v-4m0 0l5-5m-5 5l-5-5" />
                  </svg>
                  <span>Edit</span>
                </button>
              )}
              <button
                onClick={handleBack}
                className="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-md transition-colors duration-200 flex items-center space-x-2"
              >
                <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                </svg>
                <span>Back</span>
              </button>
              <button
                onClick={handlePrint}
                className="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-md transition-colors duration-200 flex items-center space-x-2"
              >
                <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z" />
                </svg>
                <span>Print</span>
              </button>
            </div>
          </div>

          {/* Card Body */}
          <div className="p-0">
            {/* Print Content - Modern Layout */}
            <div id="print-content" className="paper A4">
              {/* <div className="sheet" style={{ margin: 'auto', padding: '15mm', height: 'auto', minHeight: '148mm', width: '210mm' }}> */}
              <div className="sheet padding-15mm">
                {/* Header */}
                <table style={{ width: '100%', marginBottom: '.5rem' }}>
                  <tbody>
                    <tr>
                      <td style={{ textAlign: 'left', width: '12%' }}>
                        <img src={logoImage} alt="Mahsoft Logo" style={{ height: '70px' }} />
                      </td>
                      <td style={{ textAlign: 'left', verticalAlign: 'top' , width: '60%'}}>
                        <div>
                          <h1 className="font-audiowide" style={{ fontSize: '1.5rem', margin: '0', padding: '0', color: '#333' }}>
                            {quoteData.company.name}
                            <span style={{ fontSize: '0.7rem', paddingLeft: '.5rem', color: '#666', fontFamily: 'roboto' }}>
                              {quoteData.company.registration}
                            </span>
                          </h1>
                        </div>
                        <div className="company-info">
                          <p>{quoteData.company.address}</p>
                          <p>
                            <span>Email: {quoteData.company.email}</span>
                            <span>Phone: {quoteData.company.phone}</span>
                          </p>
                        </div>
                      </td>
                      <td style={{ textAlign: 'right', verticalAlign: 'top' }}>
                        <h1 className="font-audiowide" style={{ fontSize: '1.5rem', margin: '0', color: '#333' }}>QUOTATION</h1>
                      </td>
                    </tr>
                  </tbody>
                </table>
                
                <hr />
                <br />

                {/* <table style={{ width: '100%', marginBottom: '1rem' }}>
                  <tbody>
                    <tr>
                      <td valign="top" style={{ fontWeight: '600',width: '50%' }}>
                        <span style={{ fontSize: '0.8rem', fontWeight: '800', display: 'block' }}>
                          {quoteData.customer.name}
                        </span>
                        <span style={{ fontSize: '0.8rem', display: 'block', fontWeight: 'normal' }}>
                          {quoteData.customer.address}
                        </span>
                        {(quoteData.customer.phone || quoteData.customer.mobile) && (
                          <span style={{ display: 'flex', gap: '1rem', fontSize: '0.7rem', fontWeight: 'normal' }}>
                            {quoteData.customer.phone && <span>Tel: {quoteData.customer.phone}</span>}
                            {quoteData.customer.mobile && <span>Mobile: {quoteData.customer.mobile}</span>}
                          </span>
                        )}
                      </td>
                    </tr>
                    <tr>
                      <td style={{ fontSize: '0.8rem', fontWeight: '600' }}>
                        Attn : <span style={{ fontSize: '0.8rem', fontWeight: '600', marginLeft: '.5rem' }}>{quoteData.customer.attn}</span>
                      </td>
                    </tr>
                  </tbody>
                </table> */}

                <div className="clientinfo-container">
                  {/* Client Info */}
                  <div className="clientinfo">
                    <p className="weight-600" style={{ marginBottom: '.3rem' }}>{quoteData.customer.name}</p>
                    <p>{quoteData.customer.address}</p>
                    {(quoteData.customer.phone || quoteData.customer.mobile) && (
                      <p>
                        {quoteData.customer.phone && <span>Tel: {quoteData.customer.phone}</span>}
                        {quoteData.customer.mobile && <span>Mobile: {quoteData.customer.mobile}</span>}
                      </p>
                    )}
                    <p style={{ fontWeight: '600', marginTop: '.5rem' }}>
                      Attn : {quoteData.customer.attn}
                    </p>
                  </div>

                  <div className="docinfo">
                    <p style={{ fontWeight: '900', margin: '0' }}>
                      <span>No</span>
                      <span>:</span>
                      <span>{quoteData.quoteNumber}</span>
                    </p>
                    <p style={{ margin: '0', color: '#666' }}>
                      <span>Date</span>
                      <span>:</span>
                      <DateFormat date={quoteData.date} />
                    </p>
                    <p style={{ margin: '0', color: '#666' }}>
                      <span>Valid</span>
                      <span>:</span>
                      <DateFormat date={quoteData.validUntil} />
                    </p>
                  </div>
                </div>

                <br />

                {/* <hr /> */}
                {/* Items Table */}
                <div className="issuence">
                  <table className="header">
                    <tbody>
                      <tr>
                        <th>Description</th>
                        <th>Qty</th>
                        <th>Unit Price</th>
                        <th>Amount</th>
                      </tr>
                    </tbody>
                  </table>

                  {/* <div className="separator-line"></div> */}
                  <hr />

                  <table className="rowbody">
                    <tbody>
                      {quoteData.items.map((item) => (
                        <React.Fragment key={item.id}>
                          <tr>
                            <td>
                              <div style={{ fontSize: '0.8rem' }}>
                                {renderStructuredText(item.description)}
                              </div>
                            </td>
                            <td>
                              {item.quantity}
                            </td>
                            <td>
                              <CurrencyFormat amount={item.unitPrice} />
                            </td>
                            <td>
                              <CurrencyFormat amount={item.amount} />
                            </td>
                          </tr>
                        </React.Fragment>
                      ))}
                    </tbody>
                  </table>
                </div>

                <hr />
                {/* Footer */}
                <div className="footer-bottom">
                  <table className="table-signature">
                    <tbody>
                      <tr style={{ display: 'flex' }}>
                        {/* <td style={{ alignSelf: 'center' }}>
                          <table className="bank-info">
                            <tbody>
                              <tr>
                                <td>Acc No.</td>
                                <td>:</td>
                                <td>{quoteData.bank.accountNumber}</td>
                              </tr>
                              <tr>
                                <td>Acc Name</td>
                                <td>:</td>
                                <td>{quoteData.bank.bankName}</td>
                              </tr>
                              <tr>
                                <td>Acc Holder</td>
                                <td>:</td>
                                <td>{quoteData.bank.accountHolder}</td>
                              </tr>
                            </tbody>
                          </table>
                        </td> */}
                        <td style={{ alignSelf: 'left', flex: 1 }}>
                          <div style={{display: 'flex', flexDirection: 'column', width: '150px', textAlign: 'left' }}>
                            <span>Issued By,</span>
                            <i>{quoteData.company.manager}</i>
                          </div>
                        </td>
                        <td style={{ alignSelf: 'center' }}>
                          <table className="inv-amt">
                            <tbody>
                              {/* <tr>
                                <td>Subtotal</td>
                                <td>{<CurrencyFormat amount={quoteData.subtotal} />}</td>
                              </tr>
                              <tr>
                                <td>Tax</td>
                                <td>{<CurrencyFormat amount={quoteData.tax} />}</td>
                              </tr> */}
                              <tr className="font-big">
                                <th style={{ border:'0',textAlign: 'right' }}>Total</th>
                                <th style={{ border:'0',textAlign: 'right' }}>{<CurrencyFormat amount={quoteData.total} />}</th>
                              </tr>
                            </tbody>
                          </table>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>

              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  )
}

export default QuotePrintPreview
